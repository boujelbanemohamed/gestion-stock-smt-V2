#!/bin/bash

################################################################################
# Script de vÃ©rification RedHat - Stock Management Platform
# VÃ©rifie que le serveur RedHat est prÃªt pour le dÃ©ploiement
################################################################################

set -e

# Couleurs pour les messages
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

echo -e "${GREEN}================================${NC}"
echo -e "${GREEN}VÃ©rification RedHat/CentOS${NC}"
echo -e "${GREEN}================================${NC}"

# VÃ©rifier la version du systÃ¨me
echo -e "\n${YELLOW}[1/8] VÃ©rification de la version du systÃ¨me...${NC}"
if [ -f /etc/redhat-release ]; then
    REDHAT_VERSION=$(cat /etc/redhat-release)
    echo -e "${GREEN}âœ“ SystÃ¨me dÃ©tectÃ©: ${REDHAT_VERSION}${NC}"
    
    # VÃ©rifier la version majeure
    if [[ $REDHAT_VERSION == *"8"* ]] || [[ $REDHAT_VERSION == *"9"* ]]; then
        echo -e "${GREEN}âœ“ Version supportÃ©e (8 ou 9)${NC}"
    else
        echo -e "${YELLOW}âš  Version non testÃ©e: ${REDHAT_VERSION}${NC}"
        echo -e "${YELLOW}  Le script peut fonctionner mais n'a pas Ã©tÃ© testÃ© sur cette version${NC}"
    fi
else
    echo -e "${RED}âœ— Ce script est conÃ§u pour RedHat/CentOS${NC}"
    exit 1
fi

# VÃ©rifier les privilÃ¨ges root
echo -e "\n${YELLOW}[2/8] VÃ©rification des privilÃ¨ges...${NC}"
if [ "$EUID" -ne 0 ]; then
    echo -e "${RED}âœ— Ce script doit Ãªtre exÃ©cutÃ© en tant que root${NC}"
    echo -e "${YELLOW}  Utilisez: sudo $0${NC}"
    exit 1
else
    echo -e "${GREEN}âœ“ ExÃ©cution en tant que root${NC}"
fi

# VÃ©rifier la connectivitÃ© rÃ©seau
echo -e "\n${YELLOW}[3/8] VÃ©rification de la connectivitÃ© rÃ©seau...${NC}"
if ping -c 1 8.8.8.8 > /dev/null 2>&1; then
    echo -e "${GREEN}âœ“ ConnectivitÃ© Internet OK${NC}"
else
    echo -e "${RED}âœ— Pas de connectivitÃ© Internet${NC}"
    echo -e "${YELLOW}  VÃ©rifiez votre configuration rÃ©seau${NC}"
    exit 1
fi

# VÃ©rifier l'espace disque
echo -e "\n${YELLOW}[4/8] VÃ©rification de l'espace disque...${NC}"
DISK_USAGE=$(df / | awk 'NR==2 {print $5}' | sed 's/%//')
if [ "$DISK_USAGE" -lt 90 ]; then
    echo -e "${GREEN}âœ“ Espace disque suffisant (${DISK_USAGE}% utilisÃ©)${NC}"
else
    echo -e "${RED}âœ— Espace disque insuffisant (${DISK_USAGE}% utilisÃ©)${NC}"
    echo -e "${YELLOW}  LibÃ©rez de l'espace avant de continuer${NC}"
    exit 1
fi

# VÃ©rifier la mÃ©moire
echo -e "\n${YELLOW}[5/8] VÃ©rification de la mÃ©moire...${NC}"
TOTAL_MEM=$(free -m | awk 'NR==2{print $2}')
if [ "$TOTAL_MEM" -ge 2048 ]; then
    echo -e "${GREEN}âœ“ MÃ©moire suffisante (${TOTAL_MEM} MB)${NC}"
else
    echo -e "${YELLOW}âš  MÃ©moire faible (${TOTAL_MEM} MB)${NC}"
    echo -e "${YELLOW}  RecommandÃ©: au moins 2 GB de RAM${NC}"
fi

# VÃ©rifier les ports disponibles
echo -e "\n${YELLOW}[6/8] VÃ©rification des ports...${NC}"
PORTS=(80 443 3000 5432)
for port in "${PORTS[@]}"; do
    if netstat -tuln | grep -q ":$port "; then
        echo -e "${YELLOW}âš  Port ${port} dÃ©jÃ  utilisÃ©${NC}"
    else
        echo -e "${GREEN}âœ“ Port ${port} disponible${NC}"
    fi
done

# VÃ©rifier les services systÃ¨me
echo -e "\n${YELLOW}[7/8] VÃ©rification des services systÃ¨me...${NC}"

# VÃ©rifier systemd
if systemctl --version > /dev/null 2>&1; then
    echo -e "${GREEN}âœ“ systemd disponible${NC}"
else
    echo -e "${RED}âœ— systemd non disponible${NC}"
    exit 1
fi

# VÃ©rifier le firewall
if systemctl is-active --quiet firewalld; then
    echo -e "${GREEN}âœ“ firewalld actif${NC}"
else
    echo -e "${YELLOW}âš  firewalld non actif${NC}"
    echo -e "${YELLOW}  Le script l'activera automatiquement${NC}"
fi

# VÃ©rifier SELinux
echo -e "\n${YELLOW}[8/8] VÃ©rification de SELinux...${NC}"
SELINUX_STATUS=$(getenforce 2>/dev/null || echo "Disabled")
if [ "$SELINUX_STATUS" = "Disabled" ]; then
    echo -e "${GREEN}âœ“ SELinux dÃ©sactivÃ©${NC}"
elif [ "$SELINUX_STATUS" = "Enforcing" ]; then
    echo -e "${YELLOW}âš  SELinux en mode Enforcing${NC}"
    echo -e "${YELLOW}  Le script configurera les permissions nÃ©cessaires${NC}"
else
    echo -e "${YELLOW}âš  SELinux en mode ${SELINUX_STATUS}${NC}"
fi

echo -e "\n${GREEN}================================${NC}"
echo -e "${GREEN}VÃ©rification terminÃ©e${NC}"
echo -e "${GREEN}================================${NC}"

echo -e "\n${YELLOW}ðŸ“‹ RÃ‰SUMÃ‰ :${NC}"
echo -e "  - SystÃ¨me: ${REDHAT_VERSION}"
echo -e "  - PrivilÃ¨ges: Root âœ“"
echo -e "  - RÃ©seau: Internet âœ“"
echo -e "  - Disque: ${DISK_USAGE}% utilisÃ©"
echo -e "  - MÃ©moire: ${TOTAL_MEM} MB"
echo -e "  - SELinux: ${SELINUX_STATUS}"

echo -e "\n${GREEN}âœ… Le serveur est prÃªt pour le dÃ©ploiement !${NC}"
echo -e "\n${YELLOW}Prochaines Ã©tapes :${NC}"
echo -e "1. Modifiez les variables dans deploy.sh (DOMAIN, DB_PASSWORD)"
echo -e "2. ExÃ©cutez: ./deploy.sh"
echo -e "3. Configurez SSL avec: ./setup-ssl.sh"
echo -e "4. Testez avec: ./test-features.sh"
