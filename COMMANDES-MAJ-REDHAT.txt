================================================================================
MISE √Ä JOUR REDHAT : 418ac4c ‚Üí 4fcaa25 (19 COMMITS)
================================================================================

‚ö†Ô∏è IMPORTANT : Vous passez de 418ac4c √† 4fcaa25 (19 nouveaux commits)
   Incluant : rollback auto, logs 30j, notifications, sch√©ma adapt√© RedHat

================================================================================

COMMANDES √Ä EX√âCUTER - COPIER-COLLER UNE PAR UNE
================================================================================

# 1. Connexion au serveur
ssh root@votre-serveur-redhat


# 2. Navigation vers le projet
cd /var/www/stock-management


# 3. V√©rifier version actuelle
git log --oneline -1
# Doit afficher : 418ac4c


# 4. Sauvegarder .env
cp .env .env.backup.20251020


# 5. Backup base de donn√©es
sudo -u postgres pg_dump stock_management > backup_avant_maj_$(date +%Y%m%d).sql


# 6. V√©rifier taille backup
ls -lh backup_avant_maj_*.sql
# Doit afficher plusieurs Mo


# 7. Compter donn√©es AVANT (notez les chiffres)
sudo -u postgres psql stock_management -c 'SELECT COUNT(*) FROM "Users";'
sudo -u postgres psql stock_management -c 'SELECT COUNT(*) FROM "Banks";'
sudo -u postgres psql stock_management -c 'SELECT COUNT(*) FROM "Cards";'


# 8. Voir les modifications locales
git status


# 9. Sauvegarder modifications locales
git stash push -m "Avant maj 418ac4c vers 4fcaa25"


# 10. V√©rifier que c'est propre
git status
# Doit afficher : working tree clean


# 11. R√©cup√©rer les 19 commits depuis GitHub
git pull origin main


# 12. V√©rifier nouvelle version
git log --oneline -1
# Doit afficher : 4fcaa25


# 13. Restaurer votre .env
cp .env.backup.20251020 .env


# 14. IMPORTANT : Corriger DATABASE_URL dans .env
nano .env

# Trouvez la ligne DATABASE_URL et modifiez-la :
# DATABASE_URL="postgresql://postgres@localhost:5432/stock_management"
# (Remplacer stockapp par postgres, enlever le mot de passe)
# 
# V√©rifiez aussi :
# NODE_ENV="production"
#
# Sauvegarder : Ctrl+O, Entr√©e, Ctrl+X


# 15. Tester connexion DB
sudo -u postgres psql stock_management -c "SELECT COUNT(*) FROM \"Users\";"
# Doit afficher un nombre SANS demander de mot de passe


# 16. LANCER LE D√âPLOIEMENT
chmod +x deploy.sh
./deploy.sh

# ‚è±Ô∏è Attendre 3-5 minutes
# Ne pas interrompre !


# 17. Apr√®s "‚úÖ D√©ploiement termin√© avec succ√®s", v√©rifier commit
git log --oneline -1
# Doit afficher : 4fcaa25


# 18. V√©rifier PM2
pm2 status
# Status doit √™tre : online


# 19. Recompter donn√©es APR√àS (doivent √™tre identiques)
sudo -u postgres psql stock_management -c 'SELECT COUNT(*) FROM "Users";'
sudo -u postgres psql stock_management -c 'SELECT COUNT(*) FROM "Banks";'
sudo -u postgres psql stock_management -c 'SELECT COUNT(*) FROM "Cards";'


# 20. Tester les APIs
curl http://localhost:3000/api/users | head -c 100
# Doit retourner : {"success":true,...


# 21. Voir les logs PM2 (v√©rifier pas d'erreurs)
pm2 logs stock-management --lines 30
# Appuyez sur Ctrl+C pour arr√™ter


# 22. Tester dans le navigateur
# http://votre-domaine.com
# - Se connecter
# - V√©rifier banques, cartes, mouvements
# - Menu Logs ‚Üí Logs visibles
# - Ic√¥ne üîî ‚Üí Notifications
# - Ajouter carte ‚Üí Seuil max = 100000


================================================================================
‚úÖ MISE √Ä JOUR TERMIN√âE !
================================================================================

Version AVANT : 418ac4c
Version APR√àS : 4fcaa25
Commits appliqu√©s : 19

Nouvelles fonctionnalit√©s :
  ‚úÖ Rollback automatique
  ‚úÖ Logs 30 jours
  ‚úÖ Notifications compl√®tes
  ‚úÖ Modal carte am√©lior√©
  ‚úÖ Bordereaux nom + adresse
  ‚úÖ Sch√©ma adapt√© RedHat
  ‚úÖ Scripts sans mot de passe


================================================================================
üÜò EN CAS DE PROBL√àME
================================================================================

Si le d√©ploiement √©choue :
-------------------------
Le rollback automatique restaure tout
‚Üí Application revenue √† 418ac4c
‚Üí Donn√©es intactes

Restauration manuelle si n√©cessaire :
--------------------------------------
git reset --hard 418ac4c
npm install
npx prisma generate
NODE_ENV=production npm run build
pm2 restart stock-management

Restaurer la base de donn√©es (seulement si vraiment n√©cessaire) :
------------------------------------------------------------------
pm2 stop stock-management
sudo -u postgres psql stock_management < backup_avant_maj_XXXXXXXX.sql
pm2 start stock-management


================================================================================
üìû SUPPORT
================================================================================

cat MISE-A-JOUR-418ac4c-VERS-4fcaa25.md  # Guide d√©taill√©
cat FIX-DATABASE-CONNECTION.md           # Fix connexion DB
cat COMMANDES-DEPLOY.txt                 # Commandes g√©n√©rales


================================================================================

